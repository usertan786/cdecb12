#### installation of eks cluster 

To create your Amazon EKS cluster role in the IAM console
Open the IAM console at https://console.aws.amazon.com/iam/.

Choose Roles, then Create role.

Under Trusted entity type, select AWS service.

From the Use cases for other AWS services dropdown list, choose EKS.

Choose EKS - Cluster for your use case, and then choose Next.

On the Add permissions tab, choose Next.

For Role name, enter a unique name for your role, such as eksClusterRole.

For Description, enter descriptive text such as Amazon EKS - Cluster role.

Choose Create role.


##### to create cluster in console 
 
 To create your cluster
Open the Amazon EKS console at https://console.aws.amazon.com/eks/home#/clusters.

Choose Add cluster and then choose Create.

On the Configure cluster page, enter the following fields:

Name – A name for your cluster. It must be unique in your AWS account. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and can't be longer than 100 characters. The name must be unique within the AWS Region and AWS account that you're creating the cluster in.

Kubernetes version – The version of Kubernetes to use for your cluster. We recommend selecting the latest version, unless you need an earlier version.

Cluster service role – Choose the Amazon EKS cluster IAM role that you created to allow the Kubernetes control plane to manage AWS resources on your behalf.

Secrets encryption – (Optional) Choose to enable secrets encryption of Kubernetes secrets using a KMS key. You can also enable this after you create your cluster. Before you enable this capability, make sure that you're familiar with the information in Enabling secret encryption on an existing cluster.

Tags – (Optional) Add any tags to your cluster. For more information, see Tagging your Amazon EKS resources.

Choose Next.

On the Specify networking page, select values for the following fields:

VPC – Choose an existing VPC that meets Amazon EKS VPC requirements to create your cluster in. Before choosing a VPC, we recommend that you're familiar with all of the requirements and considerations in Amazon EKS VPC and subnet requirements and considerations. You can't change which VPC you want to use after cluster creation. If no VPCs are listed, then you need to create one first. For more information, see Creating a VPC for your Amazon EKS cluster.

Subnets – By default, all available subnets in the VPC specified in the previous field are preselected. You must select at least two.

The subnets that you choose must meet the Amazon EKS subnet requirements. Before selecting subnets, we recommend that you're familiar with all of the Amazon EKS VPC and subnet requirements and considerations. You can't change which subnets you want to use after cluster creation.

Security groups – (Optional) Specify one or more security groups that you want Amazon EKS to associate to the network interfaces that it creates.

Whether you choose any security groups or not, Amazon EKS creates a security group that enables communication between your cluster and your VPC. Amazon EKS associates this security group, and any that you choose, to the network interfaces that it creates. For more information about the cluster security group that Amazon EKS creates, see Amazon EKS security group requirements and considerations. You can modify the rules in the cluster security group that Amazon EKS creates. If you choose to add your own security groups, you can't change the ones that you choose after cluster creation.

Choose cluster IP address family – You can choose either IPv4 and IPv6.

Kubernetes assigns IPv4 addresses to Pods and services, by default. Before deciding to use the IPv6 family, make sure that you're familiar with all of the considerations and requirements in the VPC requirements and considerations, Subnet requirements and considerations, Amazon EKS security group requirements and considerations, and Tutorial: Assigning IPv6 addresses to Pods and services topics. If you choose the IPv6 family, you can't specify an address range for Kubernetes to assign IPv6 service addresses from like you can for the IPv4 family. Kubernetes assigns service addresses from the unique local address range (fc00::/7).

(Optional) Choose Configure Kubernetes Service IP address range and specify a Service IPv4 range.

Specifying your own range can help prevent conflicts between Kubernetes services and other networks peered or connected to your VPC. Enter a range in CIDR notation. For example: 10.2.0.0/16.

The CIDR block must meet the following requirements:

Be within one of the following ranges: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.

Have a minimum size of /24 and a maximum size of /12.

Not overlap with the range of the VPC for your Amazon EKS resources.

You can only specify this option when using the IPv4 address family and only at cluster creation. If you don't specify this, then Kubernetes assigns service IP addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks.

For Cluster endpoint access, select an option. After your cluster is created, you can change this option. Before selecting a non-default option, make sure to familiarize yourself with the options and their implications. For more information, see Amazon EKS cluster endpoint access control.

On the Configure logging page, you can optionally choose which log types that you want to enable. By default, each log type is Disabled. Before selecting a different option, familiarize yourself with the information in Amazon EKS control plane logging. After you create the cluster, you can change this option.

Select Next.

On the Select add-ons page, choose the add-ons that you want to add to your cluster. You can choose as many Amazon EKS add-ons and AWS Marketplace add-ons as you require. If the AWS Marketplace add-ons that you want to install isn't listed, you can search for available AWS Marketplace add-ons by entering text in the search box. You can also search by category, vendor, or pricing model and then choose the add-ons from the search results. Once you've selected the add-ons that you want to install, choose Next.

On the Configure selected add-ons settings page, select the version that you want to install and then choose Next. You can always update to a later version after cluster creation. You can update the configuration of each add-on after cluster creation. For more information about configuring add-ons, see Updating an add-on.

On the Review and create page, review the information that you entered or selected on the previous pages. If you need to make changes, choose Edit. When you're satisfied, choose Create. The Status field shows CREATING while the cluster is provisioned.


#### create nodegroup 
 
 for role you need 
     AmazonEKSWorkerNodePolicy
     AmazonEC2ContainerRegistryReadOnly
     AmazonEKS_CNI_Policy

#### for access the cluster 
create instance or run command in your local machine (wsl)

1) install awscli in instance 

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

2) used credentials of root users if you create cluster using root user
access key and secret access key


3) Install kubectl 
 check using this command 
 kubectl version --short --client
  
  curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.1/2023-04-19/bin/linux/amd64/kubectl
  chmod +x ./kubectl
  mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  kubectl version --short --client
 

4) Install aws_iam_authenticator 
  curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64
  chmod +x ./aws-iam-authenticator
  mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH
  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  aws-iam-authenticator help

5) update kubeconfig file after cluster create or after nodegroup
  aws eks update-kubeconfig --region region-code --name my-cluster
  kubectl get svc

  NAME             TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
  svc/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   1m
 
  you will get this output 